{"version":3,"sources":["languages/index.js","containers/Language.js","containers/User.js","containers/Theme.js","services/api.js","services/filterAndSort.js","services/helpers.js","services/search.js","services/svg.js","components/Header/LanguageSelector.js","components/SigninSignup/Error.js","components/SigninSignup/SignInUpForm.js","components/SigninSignup/LoginSignup.js","components/Appointments/Appointment.js","services/convertors.js","components/Appointments/Edit.js","components/Appointments/Row.js","components/Appointments/TableHeader.js","components/Appointments/Filter.js","components/Appointments/Appointments.js","components/Appointments/Title.js","components/Navbar/SignOut.js","components/Appointments/Search.js","components/Navbar/Print.js","components/Navbar/Navbar.js","components/Navbar/AddNewButton.js","components/Footer/Footer.js","components/Appointments/NewAppointment.js","App.js","reportWebVitals.js","index.js"],"names":["dictionaryList","en","he","languageOptions","LanguageContext","createContext","userLanguage","dictionary","LanguageProvider","children","defaultLanguage","window","localStorage","getItem","useState","setUserLanguage","provider","userLanguageChange","selected","newLanguage","setItem","Provider","value","Text","tid","useContext","UserContext","user","UserProvider","themes","ltr","textAlign","direction","float","rtl","ThemeContext","API_ROOT","process","token","headers","Accept","Authorization","returnValue","nameA","nameB","order","returnDate","a","b","date","time","validate","appointment","minTwoChar","message","doctor","patient","patientName","location","address","validateDate","includeDate","includeTime","createErrorMessage","slice","fiveYearsYear","Date","getFullYear","split","createClassName","name","language","checkValues","search","toLowerCase","includes","editSVG","xmlns","viewBox","data-supported-dps","fill","className","width","height","focusable","d","deleteSVG","xSVG","LanguageSelector","changeTheme","onChange","e","target","Object","entries","map","id","Error","error","length","errorToPrint","SignInUpForm","handleSubmit","handleChange","email","password","password_confirmation","toggle","setToggle","emailInput","autoComplete","type","placeholder","required","passwordInput","minimum","passwordConfInput","passwordConfirmation","onSubmit","color","size","login","onClick","changeToSignUp","signUp","changeToLogin","LoginSignup","handleSignInUp","initialState","setState","preventDefault","prevState","Appointment","edit","setEdit","updateAppointmentsList","mobile","specialty","need_insurance","insurance_approval","appointment_notes","symptoms","handelDelete","fetch","method","then","res","json","deleteAppointment","data","alert","renderEditDeleteButtons","renderAdditionalInfo","info","moment","format","dateToConvert","dayWeek","month","year","day","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","January","February","March","April","May","June","July","August","September","October","November","December","convertDate","at","hour","ampm","convertTime","checkSpecialty","no","yes","notes","delete","cancel","Edit","updatedAppointment","setUpdatedAppointment","setError","checked","valid","body","JSON","stringify","updateAppointment","checkNull","renderButtons","save","additionalInformation","colSpan","Row","TableHeader","sort","sortingBy","needInsuranceApproval","approvedByInsurance","Filter","setFilter","setSelected","nextAppointments","archive","allAppointments","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Appointments","appointments","searchWindow","setSort","isSort","setIsSort","filter","fieldName","list","app","searchBy","array","toUpperCase","needInsurance","noInsurance","sortBy","isBefore","filterBy","listToRender","renderTable","index","noResults","Title","SignOut","setLogout","Search","setSearch","setSearchWindow","searchInput","setSearchInput","clearSearch","document","getElementById","handelSearchSubmit","trim","setTimeout","Print","element","icon","faPrint","print","Navbar","renderLanguages","renderSignUp","renderAddNewButton","jwt","faSearch","AddNewButton","setAddNew","faPlus","Footer","NewAppointment","addNewAppointment","addNew","fetchAppointment","addAppointment","renderInput","renderTextArea","user_id","App","theme","setTheme","setUser","setJwt","signup","handleAuthResponse","setAppointments","clear","style","updateList","concat","action","filteredList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fbdcd27b.chunk.js","sourcesContent":["import en from \"./en.json\";\nimport he from \"./he.json\";\n\nexport const dictionaryList = { en, he };\n\nexport const languageOptions = {\n  en: \"English\",\n  he: \"עברית\",\n};\n","import React, { useState, createContext, useContext } from \"react\";\n\nimport { languageOptions, dictionaryList } from \"../languages\";\n\n//set default language\nexport const LanguageContext = createContext({\n  userLanguage: \"en\",\n  dictionary: dictionaryList.en,\n});\n\n// provides context, using the local storage instead of using state\nexport function LanguageProvider({ children }) {\n  const defaultLanguage = window.localStorage.getItem(\"user-lang\");\n  const [userLanguage, setUserLanguage] = useState(defaultLanguage || \"en\");\n\n  const provider = {\n    userLanguage,\n    dictionary: dictionaryList[userLanguage],\n    userLanguageChange: (selected) => {\n      const newLanguage = languageOptions[selected] ? selected : \"en\";\n      setUserLanguage(newLanguage);\n      window.localStorage.setItem(\"user-lang\", newLanguage);\n    },\n  };\n\n  return (\n    <LanguageContext.Provider value={provider}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\n// get text according to id & current language\nexport function Text({ tid }) {\n  const languageContext = useContext(LanguageContext);\n\n  return languageContext.dictionary[tid] || tid;\n}\n","import React, { createContext } from \"react\";\n\n//set default user to empty object\nexport const UserContext = createContext({\n  user: {},\n});\n\n// provides context,passing user as props\nexport function UserProvider({ children, user }) {\n  const provider = {\n    user: user,\n  };\n  return (\n    <UserContext.Provider value={provider}>{children}</UserContext.Provider>\n  );\n}\n","import { createContext } from \"react\";\n\nexport const themes = {\n  ltr: {\n    textAlign: \"left\",\n    direction: \"ltr\",\n    float: \"left\",\n  },\n  rtl: {\n    textAlign: \"right\",\n    direction: \"rtl\",\n    float: \"right\",\n  },\n};\n\nexport const ThemeContext = createContext({ themes: themes.rtl });\n","const API_ROOT = process.env.REACT_APP_URL;\n\nconst token = localStorage.getItem(\"token\");\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n  Authorization: `Bearers ${token}`\n};\n\nexport const login = (user) => {\n  return fetch(`${API_ROOT}/login`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ user })\n  }).then((res) => res.json());\n};\n\nexport const signup = (user) => {\n  return fetch(`${API_ROOT}/users`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ user })\n  }).then((res) => res.json());\n};\nexport const reAuthentication = () => {\n  return fetch(`${API_ROOT}/reauth`, {\n    method: \"GET\",\n    headers: headers\n  }).then((res) => res.json());\n};\n\nexport const deleteAppointment = (id) => {\n  return fetch(`${API_ROOT}/appointments/${id}`, {\n    method: \"DELETE\",\n    headers: headers\n  }).then((res) => res.json());\n};\nexport const updateAppointment = (appointment) => {\n  return fetch(`${API_ROOT}/appointments/${appointment.id}`, {\n    method: \"PATCH\",\n    headers: headers,\n    body: JSON.stringify({ appointment })\n  }).then((res) => res.json());\n};\nexport const addAppointment = (appointment) => {\n  return fetch(`${API_ROOT}/appointments`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(appointment)\n  }).then((res) => res.json());\n};\n","import moment from \"moment\";\n\nexport const sortBy = (array, name, order) => {\n  switch (name) {\n    case \"date\": {\n      return array.sort((a, b) =>\n        order ? returnDate(a, b) : returnDate(b, a)\n      );\n    }\n    case \"doctor\": {\n      return array.sort((a, b) => {\n        let nameA = a.doctor.toUpperCase();\n        let nameB = b.doctor.toUpperCase();\n        return returnValue(nameA, nameB, order);\n      });\n    }\n    case \"patient\": {\n      return array.sort((a, b) => {\n        let nameA = a.patient.toUpperCase();\n        let nameB = b.patient.toUpperCase();\n        return returnValue(nameA, nameB, order);\n      });\n    }\n    case \"insurance_approval\": {\n      let needInsurance = array.filter((app) => app.need_insurance === true);\n      let noInsurance = array.filter((app) => app.need_insurance !== true);\n      return order\n        ? [...needInsurance, ...noInsurance]\n        : [...noInsurance, ...needInsurance];\n    }\n    default:\n      return array;\n  }\n};\n\nconst returnValue = (nameA, nameB, order) => {\n  return order === true ? (nameA < nameB ? -1 : 1) : nameA > nameB ? -1 : 1;\n};\nconst returnDate = (a, b) => {\n  return a.date > b.date\n    ? 1\n    : a.date === b.date\n    ? a.time > b.time\n      ? 1\n      : -1\n    : -1;\n};\nexport const filterBy = (array, fieldName) => {\n  if (array) {\n    if (fieldName === \"need_insurance\")\n      return array.filter((app) => app.need_insurance === true);\n    if (fieldName === \"insurance_done\")\n      return array.filter(\n        (app) => app.insurance_approval === true && app.need_insurance === true\n      );\n    if (fieldName === \"past_only\")\n      return array.filter((app) => {\n        return moment(app.date, \"YYYY/MM/DD\").isBefore(moment()) ? app : null;\n      });\n    if (fieldName === \"future\")\n      return array.filter((app) => {\n        return !moment(app.date, \"YYYY/MM/DD\").isBefore(moment()) ? app : null;\n      });\n\n    if (fieldName === \"search\") {\n    }\n  }\n  return array;\n};\n","export const validate = (appointment, dictionary) => {\n  const minTwoChar = ` ${dictionary.minTwoChar}. `;\n  let message = \"\",\n    date = \"\",\n    time = \"\";\n  if (appointment.doctor === \"\") {\n    message = `${dictionary.doctor}, `;\n  }\n  if (appointment.patient === \"\") {\n    message = message + `${dictionary.patientName}, `;\n  }\n  if (appointment.location === \"\") {\n    message = message + `${dictionary.address}, `;\n  }\n  if (!appointment.date || !validateDate(appointment.date)) {\n    date = `${dictionary.includeDate}. `;\n  }\n  if (!appointment.time) {\n    time = `${dictionary.includeTime}. `;\n  }\n\n  return !time && !date && !message\n    ? true\n    : createErrorMessage(date, time, message, minTwoChar);\n};\nconst createErrorMessage = (date, time, message, minTwoChar) => {\n  return !message\n    ? (date + time).slice(0, -2) + \".\"\n    : message.slice(0, -2) + \":\" + minTwoChar + date + time;\n};\n\nconst validateDate = (date) => {\n  let fiveYearsYear = new Date().getFullYear() - 5;\n  return +date.split(\"-\")[0] >= fiveYearsYear ? true : false;\n};\n\nexport const createClassName = (name, language) => {\n  return `${name}-${language}`;\n};\n","export const searchBy = (appointments, search) =>\n  appointments.filter((app) => checkValues(app, search));\n\nconst checkValues = (appointment, search) => {\n  let keys = [\n    \"doctor\",\n    \"patient\",\n    \"appointment_notes\",\n    \"location\",\n    \"specialty\",\n    \"symptoms\"\n  ];\n  for (let key of keys) {\n    if (appointment[key].toLowerCase().includes(search.toLowerCase()))\n      return true;\n  }\n  return false;\n};\n","export const editSVG = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    data-supported-dps=\"24x24\"\n    fill=\"currentColor\"\n    className=\"mercado-match\"\n    width=\"24\"\n    height=\"24\"\n    focusable=\"false\"\n  >\n    <path d=\"M21.13 2.86a3 3 0 00-4.17 0l-13 13L2 22l6.19-2L21.13 7a3 3 0 000-4.16zM6.77 18.57l-1.35-1.34L16.64 6 18 7.35z\"></path>\n  </svg>\n);\n\nexport const deleteSVG = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    data-supported-dps=\"24x24\"\n    fill=\"currentColor\"\n    className=\"mercado-match\"\n    width=\"24\"\n    height=\"24\"\n    focusable=\"false\"\n  >\n    <path\n      className=\"delete\"\n      d=\"M20 4v1H4V4a1 1 0 011-1h4a1 1 0 011-1h4a1 1 0 011 1h4a1 1 0 011 1zM5 6h14v13a3 3 0 01-3 3H8a3 3 0 01-3-3zm9 12h1V8h-1zm-5 0h1V8H9z\"\n    ></path>\n  </svg>\n);\n\nexport const xSVG = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    data-supported-dps=\"24x24\"\n    fill=\"currentColor\"\n    className=\"mercado-match\"\n    width=\"16\"\n    height=\"16\"\n    focusable=\"false\"\n  >\n    <path d=\"M13.42 12L20 18.58 18.58 20 12 13.42 5.42 20 4 18.58 10.58 12 4 5.42 5.42 4 12 10.58 18.58 4 20 5.42z\"></path>\n  </svg>\n);\n","import React, { useContext } from \"react\";\nimport { languageOptions } from \"../../languages\";\nimport { LanguageContext } from \"../../containers/Language\";\n\nexport default function LanguageSelector({ changeTheme }) {\n  const { userLanguage, userLanguageChange } = useContext(LanguageContext);\n\n  const handleLanguageChange = (e) => {\n    userLanguageChange(e.target.value);\n    changeTheme();\n  };\n\n  return (\n    <select onChange={handleLanguageChange} value={userLanguage}>\n      {Object.entries(languageOptions).map(([id, name]) => (\n        <option key={id} value={id}>\n          {name}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"../../containers/Language\";\n\nexport default function Error({ error }) {\n  const errorToPrint = (error) => {\n    // errors for login\n    if (typeof error === \"string\") {\n      if (error === \"Please check your password\") return \"checkPassword\";\n      if (error === \"Please check your email\") return \"checkEmail\";\n      else {\n        return \"checkEmailPassword\";\n      }\n    }\n    // errors for signup\n    if (error.length > 0) {\n      if (error.includes(\"Email has already been taken\")) return \"emailTaken\";\n      if (error.includes(\"Password is invalid\")) return \"invalidPassword\";\n      if (error.includes(\"Password confirmation doesn't match Password\"))\n        return \"checkPasswordConfirmation\";\n    }\n    return \"error\";\n  };\n\n  return (\n    <div>\n      <Text tid={errorToPrint(error)} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Error from \"./Error\";\nexport default function SignInUpForm({\n  handleSubmit,\n  handleChange,\n  dictionary,\n  email,\n  password,\n  password_confirmation,\n  error\n}) {\n  const [toggle, setToggle] = useState(true);\n\n  const emailInput = (\n    <input\n      autoComplete=\"on\"\n      onChange={handleChange}\n      type=\"text\"\n      value={email}\n      name=\"email\"\n      placeholder={dictionary.email}\n      required\n    />\n  );\n  const passwordInput = (\n    <input\n      onChange={handleChange}\n      type=\"password\"\n      value={password}\n      name=\"password\"\n      placeholder={dictionary.password}\n      required\n      minimum={6}\n    />\n  );\n  const passwordConfInput = (\n    <input\n      onChange={handleChange}\n      type=\"password\"\n      value={password_confirmation}\n      name=\"password_confirmation\"\n      placeholder={dictionary.passwordConfirmation}\n    />\n  );\n\n  return (\n    <div>\n      <div className=\"error-message\">\n        {error ? <Error error={error} /> : null}\n      </div>\n      {toggle ? (\n        <div>\n          <form className=\"login-signup-form\" onSubmit={(e) => handleSubmit(e)}>\n            {emailInput}\n            <br />\n            {passwordInput}\n            <br />\n            <button type=\"submit\" color=\"primary\" size=\"lg\">\n              {dictionary.login}\n            </button>\n            <br />\n          </form>\n          <button className=\"toggle\" onClick={() => setToggle(false)}>\n            {dictionary.changeToSignUp}\n          </button>\n        </div>\n      ) : (\n        <div>\n          <form className=\"login-signup-form\" onSubmit={(e) => handleSubmit(e)}>\n            {emailInput}\n            <br />\n            {passwordInput}\n            <br />\n            {passwordConfInput}\n            <br />\n            <button type=\"submit\" color=\"primary\" size=\"lg\">\n              {dictionary.signUp}\n            </button>\n            <br />\n          </form>\n          <button className=\"toggle\" onClick={() => setToggle(true)}>\n            {dictionary.changeToLogin}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { LanguageContext } from \"../../containers/Language\";\nimport SignInUpForm from \"./SignInUpForm\";\n\nfunction LoginSignup({ handleSignInUp, error }) {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  };\n  const [{ email, password, password_confirmation }, setState] = useState(\n    initialState\n  );\n\n  const clearState = () => {\n    setState({ ...initialState });\n  };\n  const { dictionary } = useContext(LanguageContext);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let user = password_confirmation\n      ? {\n          email: email.toLowerCase(),\n          password: password,\n          password_confirmation: password_confirmation,\n        }\n      : { email: email.toLowerCase(), password: password };\n    handleSignInUp(user);\n    clearState();\n  };\n  return (\n    <div className=\"login-signup\">\n      <SignInUpForm\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        dictionary={dictionary}\n        email={email}\n        error={error}\n        password={password}\n        password_confirmation={password_confirmation}\n      />\n    </div>\n  );\n}\n\nexport default LoginSignup;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport {\n  deleteSVG,\n  editSVG,\n  createClassName,\n  deleteAppointment,\n  convertTime,\n  convertDate\n} from \"../../services\";\n\nexport default function Appointment({\n  dictionary,\n  appointment,\n  edit,\n  setEdit,\n  userLanguage,\n  updateAppointmentsList,\n  mobile\n}) {\n  const {\n    doctor,\n    specialty,\n    patient,\n    location,\n    need_insurance,\n    insurance_approval,\n    appointment_notes,\n    date,\n    time,\n    symptoms,\n    id\n  } = appointment;\n\n  const checkSpecialty = (specialty) => {\n    return specialty ? `(${specialty})` : null;\n  };\n\n  const checkDate = () => {\n    return userLanguage === \"en\"\n      ? moment(date).format(\"dddd, MMMM Do YYYY\")\n      : convertDate(date);\n  };\n\n  const checkTime = () => {\n    return userLanguage === \"en\" ? convertTime(time) : time;\n  };\n\n  const [toggle, setToggle] = useState(false);\n\n  const handelDelete = (id) => {\n    deleteAppointment(id).then((data) => {\n      if (!data.error) {\n        updateAppointmentsList(id, \"delete\");\n      } else {\n        alert(data.error);\n      }\n    });\n  };\n  const renderEditDeleteButtons = () => (\n    <>\n      <button className=\"svg-button\" onClick={() => setEdit(!edit)}>\n        {editSVG}\n      </button>\n      <button className=\"svg-button\" onClick={() => setToggle(!toggle)}>\n        {deleteSVG}\n      </button>\n    </>\n  );\n  const renderAdditionalInfo = (dictionary, info) => (\n    <>\n      <p className=\"title\">{dictionary}</p>\n      <p className=\"description\">{info}</p>\n    </>\n  );\n\n  return (\n    <tr>\n      {!mobile ? (\n        <td className=\"first-column\">\n          <div className=\"vertical-buttons\">\n            {toggle ? null : renderEditDeleteButtons()}\n          </div>\n        </td>\n      ) : null}\n      <td>\n        {checkDate()} {dictionary.at} {checkTime()}\n      </td>\n      <td>\n        {doctor}\n        <br /> {checkSpecialty(specialty)}\n      </td>\n      <td>{patient}</td>\n      <td>{location !== null ? location : `${dictionary.no}`}</td>\n      <td>{need_insurance ? `${dictionary.yes}` : `${dictionary.no}`}</td>\n      <td>{insurance_approval ? `${dictionary.yes}` : `${dictionary.no}`}</td>\n      <td className=\"additional-info\">\n        {appointment_notes || symptoms ? (\n          <>\n            {appointment_notes\n              ? renderAdditionalInfo(dictionary.notes, appointment_notes)\n              : null}\n            <br />\n            {symptoms\n              ? renderAdditionalInfo(dictionary.symptoms, symptoms)\n              : null}\n          </>\n        ) : null}\n        <div className=\"buttons\">\n          {toggle ? (\n            <>\n              <button\n                onClick={() => handelDelete(id)}\n                className={createClassName(\"button\", \"delete\")}\n              >\n                {dictionary.delete}\n              </button>{\" \"}\n              <button\n                onClick={() => setToggle(!toggle)}\n                className={createClassName(\"button\", \"cancel\")}\n              >\n                {dictionary.cancel}\n              </button>\n            </>\n          ) : null}\n        </div>\n      </td>\n      {mobile ? <td>{toggle ? null : renderEditDeleteButtons()}</td> : null}\n    </tr>\n  );\n}\n","import moment from \"moment\";\n\nexport const convertTime = (time) => {\n  if (!time) return \"00:00 AM\";\n  let hour = time.split(\":\")[0];\n  let ampm = hour >= 12 ? \"PM\" : \"AM\";\n  if (hour > 12) hour = hour - 12;\n  if (hour === \"00\") hour = 12;\n  let minuets = time.split(\":\")[1];\n\n  return hour + \":\" + minuets + \" \" + ampm;\n};\n\nexport const convertDate = (date) => {\n  const days = {\n    Sunday: \"ראשון\",\n    Monday: \"שני\",\n    Tuesday: \"שלישי\",\n    Wednesday: \"רביעי\",\n    Thursday: \"חמישי\",\n    Friday: \"שישי\",\n    Saturday: \"שבת\"\n  };\n\n  const months = {\n    January: \"ינואר\",\n    February: \"פברואר\",\n    March: \"מרץ\",\n    April: \"אפריל\",\n    May: \"מאי\",\n    June: \"יוני\",\n    July: \"יולי\",\n    August: \"אוגוסט\",\n    September: \"ספטמבר\",\n    October: \"אוקטובר\",\n    November: \"נובמבר\",\n    December: \"דצמבר\"\n  };\n  let dateToConvert = moment(date).format(\"dddd, MMMM Do YYYY\");\n  let dayWeek = dateToConvert.split(\",\")[0];\n  let month = dateToConvert.split(\" \")[1];\n  let year = dateToConvert.split(\" \")[3];\n  let day = date.split(\"-\")[2];\n  dayWeek = days[dayWeek];\n  month = months[month];\n  return dayWeek + \", \" + day + \" ב\" + month + \" \" + year;\n};\n","import React, { useState } from \"react\";\nimport { updateAppointment, validate, createClassName } from \"../../services\";\n\nexport default function Edit({\n  dictionary,\n  appointment,\n  edit,\n  setEdit,\n  updateAppointmentsList,\n  mobile\n}) {\n  const [updatedAppointment, setUpdatedAppointment] = useState(appointment);\n  const [error, setError] = useState(false);\n\n  const handleChange = (e) => {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    setUpdatedAppointment({ ...updatedAppointment, [e.target.name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let valid = validate(updatedAppointment, dictionary);\n    if (valid === true) {\n      updateAppointment(updatedAppointment).then((data) => {\n        if (!data.error) {\n          updateAppointmentsList(data, \"edit\");\n          setEdit(!edit);\n        } else {\n          setError(data.error);\n        }\n      });\n    } else {\n      setError(valid);\n      setUpdatedAppointment(appointment);\n    }\n  };\n\n  const checkNull = (value) => {\n    return value === null ? \"\" : value;\n  };\n\n  const renderButtons = () => (\n    <div className=\"buttons\">\n      <button\n        className={createClassName(\"button\", \"save\")}\n        onClick={handleSubmit}\n      >\n        {dictionary.save}\n      </button>\n      <button\n        className={createClassName(\"button\", \"cancel\")}\n        onClick={() => setEdit(!edit)}\n      >\n        {dictionary.cancel}\n      </button>\n    </div>\n  );\n\n  return (\n    <>\n      <tr className=\"edit\">\n        {!mobile ? <td> {renderButtons()}</td> : null}\n        <td>\n          <label>{dictionary.date} </label>\n          <br />\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={updatedAppointment.date}\n            onChange={handleChange}\n          />\n          <br />\n          <label>{dictionary.time} </label>\n          <br />\n          <input\n            type=\"time\"\n            name=\"time\"\n            value={updatedAppointment.time}\n            onChange={handleChange}\n          />\n        </td>\n        <td>\n          <label>{dictionary.doctor} </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"doctor\"\n            value={checkNull(updatedAppointment.doctor)}\n            onChange={handleChange}\n          />\n          <br />\n          <label>{dictionary.specialty} </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"specialty\"\n            value={checkNull(updatedAppointment.specialty)}\n            onChange={handleChange}\n          />\n        </td>\n        <td>\n          <label>{dictionary.patientName} </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"patient\"\n            value={updatedAppointment.patient}\n            onChange={handleChange}\n          />\n        </td>\n        <td>\n          <label>{dictionary.address} </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"location\"\n            value={updatedAppointment.location}\n            onChange={handleChange}\n          />\n        </td>\n        <td>\n          <input\n            name=\"need_insurance\"\n            type=\"checkbox\"\n            checked={updatedAppointment.need_insurance}\n            onChange={handleChange}\n          />\n        </td>\n        <td>\n          <input\n            name=\"insurance_approval\"\n            type=\"checkbox\"\n            checked={updatedAppointment.insurance_approval}\n            onChange={handleChange}\n          />\n        </td>\n        <td>\n          <label>{dictionary.additionalInformation}</label>\n          <br />\n          <textarea\n            type=\"text\"\n            name=\"appointment_notes\"\n            value={checkNull(updatedAppointment.appointment_notes)}\n            onChange={handleChange}\n          />\n          <br />\n          <label>{checkNull(dictionary.symptoms)}</label>\n          <br />\n          <textarea\n            type=\"text\"\n            name=\"symptoms\"\n            value={checkNull(updatedAppointment.symptoms)}\n            onChange={handleChange}\n          />\n          {mobile ? renderButtons() : null}\n        </td>\n      </tr>\n      {error ? (\n        <tr className=\"table-errors\">\n          <td colSpan=\"8\">{error}</td>\n        </tr>\n      ) : null}\n    </>\n  );\n}\n","import React, { useContext, useState } from \"react\";\n\nimport { LanguageContext } from \"../../containers/Language\";\nimport Appointment from \"./Appointment\";\nimport Edit from \"./Edit\";\n\nexport default function Row({ appointment, updateAppointmentsList, mobile }) {\n  const { dictionary, userLanguage } = useContext(LanguageContext);\n  const [edit, setEdit] = useState(false);\n\n  return (\n    <>\n      {edit ? (\n        <Edit\n          dictionary={dictionary}\n          appointment={appointment}\n          edit={edit}\n          setEdit={setEdit}\n          mobile={mobile}\n          updateAppointmentsList={updateAppointmentsList}\n        />\n      ) : (\n        <Appointment\n          userLanguage={userLanguage}\n          dictionary={dictionary}\n          appointment={appointment}\n          edit={edit}\n          setEdit={setEdit}\n          updateAppointmentsList={updateAppointmentsList}\n          mobile={mobile}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function TableHeader({ dictionary, sort, sortingBy, mobile }) {\n  return (\n    <thead>\n      <tr>\n        {!mobile ? (\n          <th className=\"first-column\">\n            <button className=\"hidden-button-no-sorting\"></button>\n          </th>\n        ) : null}\n        <th>\n          <button\n            className={sort === \"date\" ? \"sorting\" : \"hidden-button\"}\n            onClick={() => sortingBy(\"date\")}\n          >\n            {dictionary.date}\n          </button>\n        </th>\n        <th>\n          <button\n            className={sort === \"doctor\" ? \"sorting\" : \"hidden-button\"}\n            onClick={() => sortingBy(\"doctor\")}\n          >\n            {dictionary.doctor}\n          </button>\n        </th>\n        <th>\n          <button\n            className={sort === \"patient\" ? \"sorting\" : \"hidden-button\"}\n            onClick={() => sortingBy(\"patient\")}\n          >\n            {dictionary.patientName}\n          </button>\n        </th>\n        <th>\n          <button className=\"hidden-button-no-sorting\">\n            {dictionary.address}\n          </button>\n        </th>\n        <th>\n          <button\n            className={\n              sort === \"insurance_approval\" ? \"sorting\" : \"hidden-button\"\n            }\n            onClick={() => sortingBy(\"insurance_approval\")}\n          >\n            {dictionary.needInsuranceApproval}\n          </button>\n        </th>\n        <th>\n          <button className=\"hidden-button-no-sorting\">\n            {dictionary.approvedByInsurance}\n          </button>\n        </th>\n        <th>\n          {\" \"}\n          <button className=\"hidden-button-no-sorting\">\n            {dictionary.additionalInformation}\n          </button>\n        </th>\n      </tr>\n    </thead>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { LanguageContext } from \"../../containers/Language\";\nimport { createClassName } from \"../../services\";\n\nexport default function Filter({ setFilter }) {\n  const { dictionary, userLanguage } = useContext(LanguageContext);\n  const [selected, setSelected] = useState(\"future\");\n\n  const filter = (e) => {\n    setSelected(e.target.value);\n    setFilter(e.target.value);\n  };\n\n  return (\n    <>\n      <label className=\"filter-label\">\n        <select\n          value={selected}\n          onChange={filter}\n          className={createClassName(\"select\", userLanguage)}\n        >\n          <option value=\"future\">{dictionary.nextAppointments}</option>\n          <option value=\"past_only\">{dictionary.archive}</option>\n          <option value=\"need_insurance\">\n            {\" \"}\n            {dictionary.needInsuranceApproval}\n          </option>\n          <option value=\"insurance_done\">\n            {dictionary.approvedByInsurance}\n          </option>\n          <option value=\"all\">{dictionary.allAppointments}</option>\n        </select>\n      </label>\n    </>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Appointment from \"./Row\";\nimport TableHeader from \"./TableHeader\";\nimport Filter from \"./Filter\";\nimport { LanguageContext } from \"../../containers/Language\";\nimport { filterBy, sortBy, searchBy, createClassName } from \"../../services\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n}\n\nexport default function Appointments({\n  appointments,\n  updateAppointmentsList,\n  searchWindow,\n  search\n}) {\n  const { dictionary, userLanguage } = useContext(LanguageContext);\n  const [sort, setSort] = useState(\"date\");\n  const [isSort, setIsSort] = useState({ date: true });\n  const [filter, setFilter] = useState(\"future\");\n\n  const sortingBy = (fieldName) => {\n    setSort(fieldName);\n    if (isSort[`${fieldName}`] === false) {\n      setIsSort({ [`${fieldName}`]: true });\n    } else {\n      setIsSort({ [`${fieldName}`]: false });\n    }\n  };\n\n  const listToRender = (appointments) => {\n    if (!appointments) return appointments;\n    if (searchWindow && search && search.length > 0) {\n      appointments = searchBy(appointments, search);\n    }\n    return sortBy(\n      filterBy(appointments, filter, search),\n      sort,\n      isSort[`${sort}`]\n    );\n  };\n  let list = listToRender(appointments);\n\n  const renderTable = (mobile) => (\n    <div>\n      {list && list.length > 0 ? (\n        <div>\n          <table className={createClassName(\"table\", userLanguage)}>\n            <TableHeader\n              sort={sort}\n              sortingBy={sortingBy}\n              dictionary={dictionary}\n              mobile={mobile}\n            />\n            <tbody>\n              {list.map((appointment, index) => (\n                <Appointment\n                  appointment={appointment}\n                  index={index}\n                  key={appointment.id}\n                  updateAppointmentsList={updateAppointmentsList}\n                  mobile={mobile}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"no-results\"> {dictionary.noResults} </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"filter\">\n        <Filter sortingBy={sortingBy} setFilter={setFilter} />\n      </div>\n      {useWindowDimensions().width > 760\n        ? renderTable(false)\n        : renderTable(true)}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Text } from \"../../containers/Language\";\n\nexport default function Title() {\n  return (\n    <div id=\"title\">\n      <h1 className=\"h1-title\">\n        <Text tid=\"exploreHeader\" />\n      </h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"../../containers/Language\";\n\nexport default function SignOut({ setLogout }) {\n  return (\n    <button className=\"navbar-button\" onClick={setLogout}>\n      <Text tid=\"logout\" />\n    </button>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { LanguageContext } from \"../../containers/Language\";\nimport { createClassName, xSVG } from \"../../services\";\n\nexport default function Search({ setSearch, setSearchWindow }) {\n  const [searchInput, setSearchInput] = useState();\n  const { dictionary, userLanguage } = useContext(LanguageContext);\n\n  const handelSearchInput = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  const clearSearch = () => {\n    if (document.getElementById(\"search\")) {\n      document.getElementById(\"search\").value = \"\";\n    }\n  };\n  const handelSearchSubmit = (e) => {\n    e.preventDefault();\n    if (searchInput && searchInput.trim() === \"\") {\n      setTimeout(clearSearch, 3000);\n    } else {\n      setSearch(searchInput);\n    }\n  };\n  return (\n    <>\n      <span className=\"open-search\">\n        <button\n          className={createClassName(\"close-search-btn\", userLanguage)}\n          onClick={() => setSearchWindow(false)}\n        >\n          {xSVG}\n        </button>\n        <form onSubmit={handelSearchSubmit}>\n          <input id=\"search\" type=\"text\" onChange={handelSearchInput} />\n          <button className=\"search-btn\" onClick={handelSearchSubmit}>\n            {dictionary.search}\n          </button>\n        </form>\n      </span>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"../../containers/Language\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Print() {\n  const element = <FontAwesomeIcon icon={faPrint} />;\n\n  return (\n    <div>\n      <button className=\"navbar-button\" onClick={() => window.print()}>\n        {element} <Text tid=\"print\" />\n      </button>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../containers/User\";\nimport { Text } from \"../../containers/Language\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport Search from \"../Appointments/Search\";\n\nimport Print from \"./Print\";\n\nexport default function Navbar({\n  renderLanguages,\n  renderSignUp,\n  renderAddNewButton,\n  jwt,\n  setSearchWindow,\n  searchWindow,\n  setSearch\n}) {\n  const { user } = useContext(UserContext);\n  const element = <FontAwesomeIcon icon={faSearch} size=\"xs\" />;\n\n  const renderSearch = () => (\n    <div className=\"close-search-navbar\">\n      <button\n        className=\"navbar-button\"\n        onClick={() => setSearchWindow(!searchWindow)}\n      >\n        {element} <Text tid=\"searchButton\" />\n      </button>\n    </div>\n  );\n\n  const renderNavAfterLogin = () => (\n    <div className=\"navbar\">\n      <div className=\"navbar-hello\">\n        <Text tid=\"hello\" /> {user.email} ,\n      </div>\n      <ul>\n        <li>{renderAddNewButton()}</li>\n        <li>{renderSearch()}</li>\n        <li>\n          <Print />\n        </li>\n        <li> {renderLanguages()}</li>\n        <li>{renderSignUp()}</li>\n      </ul>\n      {searchWindow ? (\n        <Search setSearchWindow={setSearchWindow} setSearch={setSearch} />\n      ) : null}\n    </div>\n  );\n\n  const renderNav = () => (\n    <div className=\"navbar-lang-only\">\n      <ul>\n        <li> {renderLanguages()}</li>\n      </ul>\n    </div>\n  );\n\n  return <>{jwt ? renderNavAfterLogin() : renderNav()}</>;\n}\n","import React from \"react\";\nimport { Text } from \"../../containers/Language\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function AddNewButton({ setAddNew }) {\n  const element = <FontAwesomeIcon icon={faPlus} size=\"xs\" />;\n\n  return (\n    <button className=\"navbar-button\" onClick={setAddNew}>\n      {element} <Text tid=\"add\" />\n    </button>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"../../containers/Language\";\n\nexport default function Footer() {\n  return (\n    <footer id=\"footer\">\n      <Text tid=\"credit\" />\n    </footer>\n  );\n}\n","import { LanguageContext, Text } from \"../../containers/Language\";\nimport React, { useContext, useState } from \"react\";\n\nimport { addAppointment, createClassName, validate } from \"../../services\";\n\nexport default function NewAppointment({\n  addNewAppointment,\n  user,\n  appointment,\n  addNew,\n  setAddNew\n}) {\n  const initialState = appointment\n    ? appointment\n    : {\n        doctor: \"\",\n        date: \"\",\n        time: \"\",\n        specialty: \"\",\n        patient: \"\",\n        address: \"\",\n        symptoms: \"\",\n        appointment_notes: \"\",\n        need_insurance: true,\n        insurance_approval: false\n      };\n\n  const { dictionary, userLanguage } = useContext(LanguageContext);\n  const [\n    {\n      doctor,\n      date,\n      time,\n      specialty,\n      patient,\n      location,\n      symptoms,\n      appointment_notes,\n      need_insurance,\n      insurance_approval\n    },\n    setState\n  ] = useState(initialState);\n\n  const handleChange = (e) => {\n    const { name, value, checked } = e.target;\n    if (name === \"need_insurance\" || name === \"insurance_approval\") {\n      setState((prevState) => ({ ...prevState, [name]: checked }));\n    } else {\n      setState((prevState) => ({ ...prevState, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let appointment = {\n      doctor,\n      date,\n      time,\n      specialty,\n      patient,\n      location,\n      symptoms,\n      appointment_notes,\n      need_insurance,\n      insurance_approval,\n      user_id: user\n    };\n\n    let valid = validate(appointment, dictionary);\n\n    valid === true ? fetchAppointment(appointment) : alert(valid);\n  };\n\n  const fetchAppointment = (appointment) => {\n    addAppointment(appointment).then((data) => {\n      if (!data.error) {\n        addNewAppointment(data);\n      } else {\n        alert(data.error);\n      }\n    });\n  };\n  const renderInput = (name, type, required) => {\n    return appointment ? (\n      <input\n        type={type}\n        name={name}\n        onChange={handleChange}\n        required={required}\n        value={`appointment.${name}`}\n      />\n    ) : (\n      <input\n        type={type}\n        name={name}\n        onChange={handleChange}\n        required={required}\n      />\n    );\n  };\n  const renderTextArea = (name) => {\n    return appointment ? (\n      <textarea\n        className=\"input\"\n        type=\"text\"\n        name={name}\n        onChange={handleChange}\n        value={`appointment.${name}`}\n      />\n    ) : (\n      <textarea\n        className=\"input\"\n        type=\"text\"\n        name={name}\n        onChange={handleChange}\n      />\n    );\n  };\n\n  return (\n    <div className=\"new-appointment-container\">\n      <div className={createClassName(\"new-appointment-form\", userLanguage)}>\n        <button className=\"x-btn\" onClick={() => setAddNew(!addNew)}>\n          {dictionary.cancel}\n        </button>\n        <br />\n        <h1>\n          <Text tid=\"newAppointment\" />\n        </h1>\n        <br />\n        <form onSubmit={handleSubmit}>\n          <label>{dictionary.doctor}</label>\n          {renderInput(\"doctor\", \"text\", true)}\n          <br />\n          <label>{dictionary.specialty}</label>\n          {renderInput(\"specialty\", \"text\", false)}\n          <br />\n          <label>{dictionary.patientName}</label>\n          {renderInput(\"patient\", \"text\", true)}\n          <br />\n          <label>{dictionary.date}</label>\n          {renderInput(\"date\", \"date\", true)}\n          <br />\n          <label>{dictionary.time}</label>\n          {renderInput(\"time\", \"time\", true)}\n          <br />\n          <label>{dictionary.address}</label>\n          {renderInput(\"location\", \"text\", true)}\n          <br />\n          <br />\n          <label>{dictionary.symptoms}</label>\n          {renderTextArea(\"symptoms\")}\n          <br />\n          <label>{dictionary.additionalInformation}</label>\n          {renderTextArea(\"appointment_notes\")}\n          <div className=\"checkbox\">\n            <label>\n              {\" \"}\n              <input\n                name=\"need_insurance\"\n                type=\"checkbox\"\n                checked={\n                  appointment ? appointment.need_insurance : need_insurance\n                }\n                onChange={handleChange}\n              />\n              {dictionary.needInsuranceApproval}\n            </label>\n            <br />\n            <label>\n              <input\n                name=\"insurance_approval\"\n                type=\"checkbox\"\n                checked={\n                  appointment\n                    ? appointment.insurance_approval\n                    : insurance_approval\n                }\n                onChange={handleChange}\n              />\n              {dictionary.approvedByInsurance}\n            </label>\n          </div>\n          <br />\n          <br />\n          <div className=\"submit\">\n            <input type=\"submit\" value={dictionary.save} />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { LanguageProvider } from \"./containers/Language\";\nimport { UserProvider } from \"./containers/User\";\nimport { ThemeContext, themes } from \"./containers/Theme\";\n\nimport { reAuthentication, signup, login } from \"./services\";\n\nimport LanguageSelector from \"./components/Header/LanguageSelector\";\nimport LoginSignup from \"./components/SigninSignup/LoginSignup\";\nimport Appointments from \"./components/Appointments/Appointments\";\nimport Title from \"./components/Appointments/Title\";\nimport SignOut from \"./components/Navbar/SignOut\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport AddNewButton from \"./components/Navbar/AddNewButton\";\nimport Footer from \"./components/Footer/Footer\";\nimport NewAppointment from \"./components/Appointments/NewAppointment\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\n    window.localStorage.getItem(\"user-lang\") === \"en\" ||\n      window.localStorage.getItem(\"user-lang\") == null\n      ? themes.ltr\n      : themes.rtl\n  );\n\n  const [user, setUser] = useState({});\n  const [jwt, setJwt] = useState(\n    localStorage.token ? localStorage.token : null\n  );\n  const [addNew, setAddNew] = useState(false);\n  const [error, setError] = useState();\n  const [searchWindow, setSearchWindow] = useState(false);\n  const [search, setSearch] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.token) {\n      reAuthentication().then((data) => {\n        if (!data.message) {\n          setUser(data.user);\n        } else {\n          setError(data.message);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!searchWindow) {\n      setSearch(false);\n    }\n  }, [searchWindow]);\n\n  const handleSignInUp = (user) => {\n    (user.password_confirmation ? signup(user) : login(user)).then((data) => {\n      !data.error ? handleAuthResponse(data) : setError(data.error);\n    });\n  };\n\n  const handleAuthResponse = (data) => {\n    !data.user ? alert(data) : (localStorage.token = data.jwt);\n    setUser(data.user);\n    setJwt(data.jwt);\n    setError();\n  };\n\n  const addNewAppointment = (appointment) => {\n    const updateList = user.appointments.concat(appointment);\n    setUser((prevState) => ({ ...prevState, appointments: updateList }));\n    setAddNew(!addNew);\n  };\n\n  const updateAppointmentsList = (appointment, action) => {\n    let id = typeof appointment === \"number\" ? appointment : appointment.id;\n    let filteredList = user.appointments.filter((a) => a.id !== id);\n    let updateList =\n      action === \"edit\" ? filteredList.concat(appointment) : filteredList;\n    setUser((prevState) => ({ ...prevState, appointments: updateList }));\n  };\n\n  const [appointments, setAppointments] = useState(user.appointments);\n\n  useEffect(() => {\n    setAppointments(user.appointments);\n  }, [user]);\n\n  const setLogout = () => {\n    setUser({});\n    setJwt();\n    localStorage.clear();\n  };\n\n  const renderLanguages = () => (\n    <LanguageSelector\n      changeTheme={() =>\n        setTheme(\n          window.localStorage.getItem(\"user-lang\") === \"en\"\n            ? themes.ltr\n            : themes.rtl\n        )\n      }\n    />\n  );\n\n  const renderLoginSignup = () => (\n    <LoginSignup handleSignInUp={handleSignInUp} error={error} />\n  );\n\n  const renderAddNewButton = () => (\n    <AddNewButton setAddNew={() => setAddNew(!addNew)} />\n  );\n  const renderSignUp = () => <SignOut setLogout={setLogout} />;\n\n  return (\n    <LanguageProvider>\n      <UserProvider user={user}>\n        <ThemeContext.Provider value={theme}>\n          <div className=\"container\" style={theme}>\n            <Navbar\n              setSearch={setSearch}\n              searchWindow={searchWindow}\n              setSearchWindow={setSearchWindow}\n              jwt={jwt}\n              renderLanguages={renderLanguages}\n              renderAddNewButton={renderAddNewButton}\n              renderSignUp={renderSignUp}\n            />\n            {!jwt ? (\n              renderLoginSignup()\n            ) : (\n              <div className=\"content\">\n                {!addNew ? (\n                  <div>\n                    <div className=\"hidden\"></div>\n                    <Title />\n                    <Appointments\n                      searchWindow={searchWindow}\n                      setSearchWindow={setSearchWindow}\n                      appointments={appointments}\n                      search={search}\n                      updateAppointmentsList={updateAppointmentsList}\n                    />\n                  </div>\n                ) : (\n                  <NewAppointment\n                    user={user.id}\n                    addNewAppointment={addNewAppointment}\n                    addNew={addNew}\n                    setAddNew={setAddNew}\n                  />\n                )}\n              </div>\n            )}\n            <Footer />\n          </div>\n        </ThemeContext.Provider>\n      </UserProvider>\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}